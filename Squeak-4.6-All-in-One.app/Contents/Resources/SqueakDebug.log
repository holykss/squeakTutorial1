MessageNotUnderstood: BlockClosure>>self18 August 2015 12:08:26.241 pmVM: Win32 - SmalltalkImage: Squeak4.6 [latest update: #15102]SecurityManager state:Restricted: falseFileAccess: trueSocketAccess: trueWorking Dir C:\prj\monoRailSqueak\Squeak-4.6-All-in-One.app\Contents\ResourcesTrusted Dir C:\prj\monoRailSqueak\Squeak-4.6-All-in-One.app\Contents\Resources\SeongsikUntrusted Dir C:\Users\Seongsik\Documents\My SqueakBlockClosure(Object)>>doesNotUnderstand: #self	Receiver: [closure] in LaserGame>>fireLaser	Arguments and temporary variables: 		aMessage: 	self		exception: 	MessageNotUnderstood: BlockClosure>>self		resumeValue: 	nil	Receiver's instance variables: 		outerContext: 	LaserGame>>fireLaser		startpc: 	59		numArgs: 	0Message>>sentTo:	Receiver: self	Arguments and temporary variables: 		receiver: 	[closure] in LaserGame>>fireLaser	Receiver's instance variables: 		selector: 	#self		args: 	#()		lookupClass: 	BlockClosureBlockClosure(Object)>>doesNotUnderstand: #self	Receiver: [closure] in LaserGame>>fireLaser	Arguments and temporary variables: 		aMessage: 	self		exception: 	MessageNotUnderstood: BlockClosure>>self		resumeValue: 	MessageNotUnderstood: BlockClosure>>self	Receiver's instance variables: 		outerContext: 	LaserGame>>fireLaser		startpc: 	59		numArgs: 	0LaserGame>>fireLaser	Receiver: a LaserGame(4059)	Arguments and temporary variables: 	Receiver's instance variables: 		bounds: 	179@88 corner: 429@238		owner: 	a PasteUpMorph(4017) [world]		submorphs: 	{a RectangleMorph(2390) . a SketchMorph(1624)}		fullBounds: 	179@88 corner: 429@238		color: 	Color blue		extension: 	a MorphExtension (1598) [other:  (layoutPolicy -> a ProportionalLayo...etc...		grid: 	a Grid		boardForm: 	Form(150x150x32)PluggableButtonMorph>>performAction	Receiver: a PluggableButtonMorph(2575)	Arguments and temporary variables: 	Receiver's instance variables: 		bounds: 	349@166 corner: 409@192		owner: 	a RectangleMorph(2390)		submorphs: 	#()		fullBounds: 	349@166 corner: 409@192		color: 	Color veryLightGray		extension: 	a MorphExtension (2686) [other:  (minHeight -> 14) (clipSubmorphs ->...etc...		borderWidth: 	2		borderColor: 	#raised		model: 	a LaserGame(4059)		label: 	a StringMorph(320)'Fire'		font: 	nil		getStateSelector: 	#laserActive		actionSelector: 	#fireLaser		getLabelSelector: 	nil		getMenuSelector: 	nil		shortcutCharacter: 	nil		askBeforeChanging: 	false		triggerOnMouseDown: 	false		offColor: 	Color lightGray		onColor: 	Color veryLightGray		feedbackColor: 	Color red		showSelectionFeedback: 	false		allButtons: 	{a PluggableButtonMorph(1198) . a PluggableButtonMorph(2575)}		arguments: 	nil		argumentsProvider: 	nil		argumentsSelector: 	nil		style: 	nil[] in PluggableButtonMorph>>mouseUp:	Receiver: a PluggableButtonMorph(2575)	Arguments and temporary variables: 		evt: 	a PluggableButtonMorph(2575)		m: 	[364@176 mouseUp 505685906]	Receiver's instance variables: 		bounds: 	349@166 corner: 409@192		owner: 	a RectangleMorph(2390)		submorphs: 	#()		fullBounds: 	349@166 corner: 409@192		color: 	Color veryLightGray		extension: 	a MorphExtension (2686) [other:  (minHeight -> 14) (clipSubmorphs ->...etc...		borderWidth: 	2		borderColor: 	#raised		model: 	a LaserGame(4059)		label: 	a StringMorph(320)'Fire'		font: 	nil		getStateSelector: 	#laserActive		actionSelector: 	#fireLaser		getLabelSelector: 	nil		getMenuSelector: 	nil		shortcutCharacter: 	nil		askBeforeChanging: 	false		triggerOnMouseDown: 	false		offColor: 	Color lightGray		onColor: 	Color veryLightGray		feedbackColor: 	Color red		showSelectionFeedback: 	false		allButtons: 	{a PluggableButtonMorph(1198) . a PluggableButtonMorph(2575)}		arguments: 	nil		argumentsProvider: 	nil		argumentsSelector: 	nil		style: 	nilArray(SequenceableCollection)>>do:	Receiver: {a PluggableButtonMorph(1198) . a PluggableButtonMorph(2575)}	Arguments and temporary variables: 		aBlock: 	[closure] in PluggableButtonMorph>>mouseUp:		index: 	2		indexLimiT: 	2	Receiver's instance variables: {a PluggableButtonMorph(1198) . a PluggableButtonMorph(2575)}PluggableButtonMorph>>mouseUp:	Receiver: a PluggableButtonMorph(2575)	Arguments and temporary variables: 		evt: 	[364@176 mouseUp 505685906]	Receiver's instance variables: 		bounds: 	349@166 corner: 409@192		owner: 	a RectangleMorph(2390)		submorphs: 	#()		fullBounds: 	349@166 corner: 409@192		color: 	Color veryLightGray		extension: 	a MorphExtension (2686) [other:  (minHeight -> 14) (clipSubmorphs ->...etc...		borderWidth: 	2		borderColor: 	#raised		model: 	a LaserGame(4059)		label: 	a StringMorph(320)'Fire'		font: 	nil		getStateSelector: 	#laserActive		actionSelector: 	#fireLaser		getLabelSelector: 	nil		getMenuSelector: 	nil		shortcutCharacter: 	nil		askBeforeChanging: 	false		triggerOnMouseDown: 	false		offColor: 	Color lightGray		onColor: 	Color veryLightGray		feedbackColor: 	Color red		showSelectionFeedback: 	false		allButtons: 	{a PluggableButtonMorph(1198) . a PluggableButtonMorph(2575)}		arguments: 	nil		argumentsProvider: 	nil		argumentsSelector: 	nil		style: 	nilPluggableButtonMorph(Morph)>>handleMouseUp:	Receiver: a PluggableButtonMorph(2575)	Arguments and temporary variables: 		anEvent: 	[364@176 mouseUp 505685906]	Receiver's instance variables: 		bounds: 	349@166 corner: 409@192		owner: 	a RectangleMorph(2390)		submorphs: 	#()		fullBounds: 	349@166 corner: 409@192		color: 	Color veryLightGray		extension: 	a MorphExtension (2686) [other:  (minHeight -> 14) (clipSubmorphs ->...etc...		borderWidth: 	2		borderColor: 	#raised		model: 	a LaserGame(4059)		label: 	a StringMorph(320)'Fire'		font: 	nil		getStateSelector: 	#laserActive		actionSelector: 	#fireLaser		getLabelSelector: 	nil		getMenuSelector: 	nil		shortcutCharacter: 	nil		askBeforeChanging: 	false		triggerOnMouseDown: 	false		offColor: 	Color lightGray		onColor: 	Color veryLightGray		feedbackColor: 	Color red		showSelectionFeedback: 	false		allButtons: 	{a PluggableButtonMorph(1198) . a PluggableButtonMorph(2575)}		arguments: 	nil		argumentsProvider: 	nil		argumentsSelector: 	nil		style: 	nilMouseButtonEvent>>sentTo:	Receiver: [364@176 mouseUp 505685906]	Arguments and temporary variables: 		anObject: 	a PluggableButtonMorph(2575)	Receiver's instance variables: 		timeStamp: 	505685906		source: 	a HandMorph(557)		type: 	#mouseUp		buttons: 	0		position: 	364@176		handler: 	nil		wasHandled: 	true		whichButton: 	4PluggableButtonMorph(Morph)>>handleEvent:	Receiver: a PluggableButtonMorph(2575)	Arguments and temporary variables: 		anEvent: 	[364@176 mouseUp 505685906]	Receiver's instance variables: 		bounds: 	349@166 corner: 409@192		owner: 	a RectangleMorph(2390)		submorphs: 	#()		fullBounds: 	349@166 corner: 409@192		color: 	Color veryLightGray		extension: 	a MorphExtension (2686) [other:  (minHeight -> 14) (clipSubmorphs ->...etc...		borderWidth: 	2		borderColor: 	#raised		model: 	a LaserGame(4059)		label: 	a StringMorph(320)'Fire'		font: 	nil		getStateSelector: 	#laserActive		actionSelector: 	#fireLaser		getLabelSelector: 	nil		getMenuSelector: 	nil		shortcutCharacter: 	nil		askBeforeChanging: 	false		triggerOnMouseDown: 	false		offColor: 	Color lightGray		onColor: 	Color veryLightGray		feedbackColor: 	Color red		showSelectionFeedback: 	false		allButtons: 	{a PluggableButtonMorph(1198) . a PluggableButtonMorph(2575)}		arguments: 	nil		argumentsProvider: 	nil		argumentsSelector: 	nil		style: 	nilPluggableButtonMorph(Morph)>>handleFocusEvent:	Receiver: a PluggableButtonMorph(2575)	Arguments and temporary variables: 		anEvent: 	[364@176 mouseUp 505685906]	Receiver's instance variables: 		bounds: 	349@166 corner: 409@192		owner: 	a RectangleMorph(2390)		submorphs: 	#()		fullBounds: 	349@166 corner: 409@192		color: 	Color veryLightGray		extension: 	a MorphExtension (2686) [other:  (minHeight -> 14) (clipSubmorphs ->...etc...		borderWidth: 	2		borderColor: 	#raised		model: 	a LaserGame(4059)		label: 	a StringMorph(320)'Fire'		font: 	nil		getStateSelector: 	#laserActive		actionSelector: 	#fireLaser		getLabelSelector: 	nil		getMenuSelector: 	nil		shortcutCharacter: 	nil		askBeforeChanging: 	false		triggerOnMouseDown: 	false		offColor: 	Color lightGray		onColor: 	Color veryLightGray		feedbackColor: 	Color red		showSelectionFeedback: 	false		allButtons: 	{a PluggableButtonMorph(1198) . a PluggableButtonMorph(2575)}		arguments: 	nil		argumentsProvider: 	nil		argumentsSelector: 	nil		style: 	nil[] in HandMorph>>sendFocusEvent:to:clear:	Receiver: a HandMorph(557)	Arguments and temporary variables: <<error during printing>	Receiver's instance variables: 		bounds: 	220@70 corner: 236@86		owner: 	a PasteUpMorph(4017) [world]		submorphs: 	#()		fullBounds: 	220@70 corner: 236@86		color: 	Color blue		extension: 	a MorphExtension (654)		mouseFocus: 	nil		keyboardFocus: 	nil		eventListeners: 	nil		mouseListeners: 	nil		keyboardListeners: 	a WeakArray(a DockingBarMorph(3042))		mouseClickState: 	nil		mouseOverHandler: 	a MouseOverHandler		lastMouseEvent: 	[220@70 mouseUp 505698734]		targetOffset: 	44@7		damageRecorder: 	a DamageRecorder		cacheCanvas: 	nil		cachedCanvasHasHoles: 	false		temporaryCursor: 	nil		temporaryCursorOffset: 	nil		hardwareCursor: 	nil		hasChanged: 	true		savedPatch: 	nil		userInitials: 	''		lastEventBuffer: 	#(1 505698734 220 70 0 0 1 1)		genieGestureProcessor: 	nil		keyboardInterpreter: 	an UTF32InputInterpreterBlockClosure>>on:do:	Receiver: [closure] in HandMorph>>sendFocusEvent:to:clear:	Arguments and temporary variables: 		exception: 	Error		handlerAction: 	[closure] in PasteUpMorph>>becomeActiveDuring:		handlerActive: 	false	Receiver's instance variables: 		outerContext: 	HandMorph>>sendFocusEvent:to:clear:		startpc: 	67		numArgs: 	0PasteUpMorph>>becomeActiveDuring:	Receiver: a PasteUpMorph(4017) [world]	Arguments and temporary variables: 		aBlock: 	[closure] in HandMorph>>sendFocusEvent:to:clear:		priorWorld: 	a PasteUpMorph(4017) [world]		priorHand: 	a HandMorph(557)		priorEvent: 	[364@176 mouseOver red nil]	Receiver's instance variables: 		bounds: 	0@0 corner: 1904@1001		owner: 	nil		submorphs: 	{a PluggableSystemWindow<System Browser: LaserGame>(401) . a Docking...etc...		fullBounds: 	nil		color: 	Color darkGray		extension: 	a MorphExtension (151) [other:  (fillStyle -> a SolidFillStyle(Color...etc...		borderWidth: 	0		borderColor: 	Color lightGray		presenter: 	an EtoysPresenter (1922)		model: 	a MorphicModel4(3934)		cursor: 	1		padding: 	3		backgroundMorph: 	nil		turtleTrailsForm: 	nil		turtlePen: 	nil		lastTurtlePositions: 	nil		isPartsBin: 	nil		indicateCursor: 	nil		wantsMouseOverHalos: 	false		worldState: 	a WorldState		griddingOn: 	nilHandMorph>>sendFocusEvent:to:clear:	Receiver: a HandMorph(557)	Arguments and temporary variables: 		anEvent: 	[364@176 mouseUp 505685906]		focusHolder: 	a PluggableButtonMorph(2575)		aBlock: 	[closure] in HandMorph>>sendMouseEvent:		w: 	a PasteUpMorph(4017) [world]		result: 	#(nil)	Receiver's instance variables: 		bounds: 	220@70 corner: 236@86		owner: 	a PasteUpMorph(4017) [world]		submorphs: 	#()		fullBounds: 	220@70 corner: 236@86		color: 	Color blue		extension: 	a MorphExtension (654)		mouseFocus: 	nil		keyboardFocus: 	nil		eventListeners: 	nil		mouseListeners: 	nil		keyboardListeners: 	a WeakArray(a DockingBarMorph(3042))		mouseClickState: 	nil		mouseOverHandler: 	a MouseOverHandler		lastMouseEvent: 	[220@70 mouseUp 505698734]		targetOffset: 	44@7		damageRecorder: 	a DamageRecorder		cacheCanvas: 	nil		cachedCanvasHasHoles: 	false		temporaryCursor: 	nil		temporaryCursorOffset: 	nil		hardwareCursor: 	nil		hasChanged: 	true		savedPatch: 	nil		userInitials: 	''		lastEventBuffer: 	#(1 505698734 220 70 0 0 1 1)		genieGestureProcessor: 	nil		keyboardInterpreter: 	an UTF32InputInterpreterHandMorph>>sendEvent:focus:clear:	Receiver: a HandMorph(557)	Arguments and temporary variables: 		anEvent: 	[364@176 mouseUp 505685906]		focusHolder: 	a PluggableButtonMorph(2575)		aBlock: 	[closure] in HandMorph>>sendMouseEvent:		result: 	nil	Receiver's instance variables: 		bounds: 	220@70 corner: 236@86		owner: 	a PasteUpMorph(4017) [world]		submorphs: 	#()		fullBounds: 	220@70 corner: 236@86		color: 	Color blue		extension: 	a MorphExtension (654)		mouseFocus: 	nil		keyboardFocus: 	nil		eventListeners: 	nil		mouseListeners: 	nil		keyboardListeners: 	a WeakArray(a DockingBarMorph(3042))		mouseClickState: 	nil		mouseOverHandler: 	a MouseOverHandler		lastMouseEvent: 	[220@70 mouseUp 505698734]		targetOffset: 	44@7		damageRecorder: 	a DamageRecorder		cacheCanvas: 	nil		cachedCanvasHasHoles: 	false		temporaryCursor: 	nil		temporaryCursorOffset: 	nil		hardwareCursor: 	nil		hasChanged: 	true		savedPatch: 	nil		userInitials: 	''		lastEventBuffer: 	#(1 505698734 220 70 0 0 1 1)		genieGestureProcessor: 	nil		keyboardInterpreter: 	an UTF32InputInterpreterHandMorph>>sendMouseEvent:	Receiver: a HandMorph(557)	Arguments and temporary variables: 		anEvent: 	[364@176 mouseUp 505685906]	Receiver's instance variables: 		bounds: 	220@70 corner: 236@86		owner: 	a PasteUpMorph(4017) [world]		submorphs: 	#()		fullBounds: 	220@70 corner: 236@86		color: 	Color blue		extension: 	a MorphExtension (654)		mouseFocus: 	nil		keyboardFocus: 	nil		eventListeners: 	nil		mouseListeners: 	nil		keyboardListeners: 	a WeakArray(a DockingBarMorph(3042))		mouseClickState: 	nil		mouseOverHandler: 	a MouseOverHandler		lastMouseEvent: 	[220@70 mouseUp 505698734]		targetOffset: 	44@7		damageRecorder: 	a DamageRecorder		cacheCanvas: 	nil		cachedCanvasHasHoles: 	false		temporaryCursor: 	nil		temporaryCursorOffset: 	nil		hardwareCursor: 	nil		hasChanged: 	true		savedPatch: 	nil		userInitials: 	''		lastEventBuffer: 	#(1 505698734 220 70 0 0 1 1)		genieGestureProcessor: 	nil		keyboardInterpreter: 	an UTF32InputInterpreterHandMorph>>handleEvent:	Receiver: a HandMorph(557)	Arguments and temporary variables: 		anEvent: 	[364@176 mouseUp 505685906]		evt: 	[364@176 mouseUp 505685906]		ofs: 	nil	Receiver's instance variables: 		bounds: 	220@70 corner: 236@86		owner: 	a PasteUpMorph(4017) [world]		submorphs: 	#()		fullBounds: 	220@70 corner: 236@86		color: 	Color blue		extension: 	a MorphExtension (654)		mouseFocus: 	nil		keyboardFocus: 	nil		eventListeners: 	nil		mouseListeners: 	nil		keyboardListeners: 	a WeakArray(a DockingBarMorph(3042))		mouseClickState: 	nil		mouseOverHandler: 	a MouseOverHandler		lastMouseEvent: 	[220@70 mouseUp 505698734]		targetOffset: 	44@7		damageRecorder: 	a DamageRecorder		cacheCanvas: 	nil		cachedCanvasHasHoles: 	false		temporaryCursor: 	nil		temporaryCursorOffset: 	nil		hardwareCursor: 	nil		hasChanged: 	true		savedPatch: 	nil		userInitials: 	''		lastEventBuffer: 	#(1 505698734 220 70 0 0 1 1)		genieGestureProcessor: 	nil		keyboardInterpreter: 	an UTF32InputInterpreter--- The full stack ---BlockClosure(Object)>>doesNotUnderstand: #selfMessage>>sentTo:BlockClosure(Object)>>doesNotUnderstand: #selfLaserGame>>fireLaserPluggableButtonMorph>>performAction[] in PluggableButtonMorph>>mouseUp:Array(SequenceableCollection)>>do:PluggableButtonMorph>>mouseUp:PluggableButtonMorph(Morph)>>handleMouseUp:MouseButtonEvent>>sentTo:PluggableButtonMorph(Morph)>>handleEvent:PluggableButtonMorph(Morph)>>handleFocusEvent:[] in HandMorph>>sendFocusEvent:to:clear:BlockClosure>>on:do:PasteUpMorph>>becomeActiveDuring:HandMorph>>sendFocusEvent:to:clear:HandMorph>>sendEvent:focus:clear:HandMorph>>sendMouseEvent:HandMorph>>handleEvent: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -HandMorph>>processEvents[] in WorldState>>doOneCycleNowFor:Array(SequenceableCollection)>>do:WorldState>>handsDo:WorldState>>doOneCycleNowFor:WorldState>>doOneCycleFor:PasteUpMorph>>doOneCycle[] in MorphicProject>>spawnNewProcess[] in BlockClosure>>newProcess