TestFailure: Assertion failed13 August 2015 4:25:31.409 pmVM: Win32 - SmalltalkImage: Squeak4.6 [latest update: #15102]SecurityManager state:Restricted: falseFileAccess: trueSocketAccess: trueWorking Dir C:\prj\monoRailSqueak\Squeak-4.6-All-in-One.app\Contents\ResourcesTrusted Dir C:\prj\monoRailSqueak\Squeak-4.6-All-in-One.app\Contents\Resources\SeongsikUntrusted Dir C:\Users\Seongsik\Documents\My SqueakCellRendererTestCase(TestCase)>>signalFailure:	Receiver: CellRendererTestCase>>#testCellOffsetCalculations	Arguments and temporary variables: 		aString: 	'Assertion failed'	Receiver's instance variables: 		testSelector: 	#testCellOffsetCalculations		timeout: 	nilCellRendererTestCase(TestCase)>>assert:	Receiver: CellRendererTestCase>>#testCellOffsetCalculations	Arguments and temporary variables: 		aBooleanOrBlock: 	false	Receiver's instance variables: 		testSelector: 	#testCellOffsetCalculations		timeout: 	nilCellRendererTestCase(TestCase)>>should:	Receiver: CellRendererTestCase>>#testCellOffsetCalculations	Arguments and temporary variables: 		aBlock: 	[closure] in CellRendererTestCase>>testCellOffsetCalculations	Receiver's instance variables: 		testSelector: 	#testCellOffsetCalculations		timeout: 	nilCellRendererTestCase>>testCellOffsetCalculations	Receiver: CellRendererTestCase>>#testCellOffsetCalculations	Arguments and temporary variables: 		grid: 	a Grid		form: 	Form(150x150x32)		cellLoc: 	2@2		cell: 	a BlankCell		renderer: 	a BlankCellRenderer		offset: 	{30@30}	Receiver's instance variables: 		testSelector: 	#testCellOffsetCalculations		timeout: 	nilCellRendererTestCase(TestCase)>>performTest	Receiver: CellRendererTestCase>>#testCellOffsetCalculations	Arguments and temporary variables: 	Receiver's instance variables: 		testSelector: 	#testCellOffsetCalculations		timeout: 	nil[] in [] in CellRendererTestCase(TestCase)>>runCase	Receiver: CellRendererTestCase>>#testCellOffsetCalculations	Arguments and temporary variables: 	Receiver's instance variables: 		testSelector: 	#testCellOffsetCalculations		timeout: 	nilBlockClosure>>on:do:	Receiver: [closure] in [] in CellRendererTestCase(TestCase)>>runCase	Arguments and temporary variables: 		exception: 	an ExceptionSet		handlerAction: 	[closure] in [] in CellRendererTestCase(TestCase)>>timeout:after...etc...		handlerActive: 	false	Receiver's instance variables: 		outerContext: 	[] in CellRendererTestCase(TestCase)>>runCase		startpc: 	62		numArgs: 	0[] in CellRendererTestCase(TestCase)>>timeout:after:	Receiver: CellRendererTestCase>>#testCellOffsetCalculations	Arguments and temporary variables: <<error during printing>	Receiver's instance variables: 		testSelector: 	#testCellOffsetCalculations		timeout: 	nilBlockClosure>>ensure:	Receiver: [closure] in CellRendererTestCase(TestCase)>>timeout:after:	Arguments and temporary variables: 		aBlock: 	[closure] in CellRendererTestCase(TestCase)>>timeout:after:		complete: 	nil		returnValue: 	nil	Receiver's instance variables: 		outerContext: 	CellRendererTestCase(TestCase)>>timeout:after:		startpc: 	157		numArgs: 	0CellRendererTestCase(TestCase)>>timeout:after:	Receiver: CellRendererTestCase>>#testCellOffsetCalculations	Arguments and temporary variables: 		aBlock: 	[closure] in [] in CellRendererTestCase(TestCase)>>runCase		seconds: 	5		delay: 	a Delay(5000 msecs; 4979 msecs remaining)		watchdog: 	a Process in [] in Delay>>wait		theProcess: 	#(nil)	Receiver's instance variables: 		testSelector: 	#testCellOffsetCalculations		timeout: 	nil[] in CellRendererTestCase(TestCase)>>runCase	Receiver: CellRendererTestCase>>#testCellOffsetCalculations	Arguments and temporary variables: 	Receiver's instance variables: 		testSelector: 	#testCellOffsetCalculations		timeout: 	nilBlockClosure>>ensure:	Receiver: [closure] in CellRendererTestCase(TestCase)>>runCase	Arguments and temporary variables: 		aBlock: 	[closure] in CellRendererTestCase(TestCase)>>runCase		complete: 	nil		returnValue: 	nil	Receiver's instance variables: 		outerContext: 	CellRendererTestCase(TestCase)>>runCase		startpc: 	45		numArgs: 	0CellRendererTestCase(TestCase)>>runCase	Receiver: CellRendererTestCase>>#testCellOffsetCalculations	Arguments and temporary variables: 	Receiver's instance variables: 		testSelector: 	#testCellOffsetCalculations		timeout: 	nil[] in CellRendererTestCase(TestCase)>>debug	Receiver: CellRendererTestCase>>#testCellOffsetCalculations	Arguments and temporary variables: 	Receiver's instance variables: 		testSelector: 	#testCellOffsetCalculations		timeout: 	nilBlockClosure>>ensure:	Receiver: [closure] in CellRendererTestCase(TestCase)>>debug	Arguments and temporary variables: 		aBlock: 	[closure] in CellRendererTestCase(TestCase)>>debug		complete: 	nil		returnValue: 	nil	Receiver's instance variables: 		outerContext: 	CellRendererTestCase(TestCase)>>debug		startpc: 	62		numArgs: 	0CellRendererTestCase(TestCase)>>debug	Receiver: CellRendererTestCase>>#testCellOffsetCalculations	Arguments and temporary variables: 	Receiver's instance variables: 		testSelector: 	#testCellOffsetCalculations		timeout: 	nil[] in TestRunner>>debugSuite:	Receiver: a TestRunner	Arguments and temporary variables: <<error during printing>	Receiver's instance variables: 		categories: 	#(#'KernelTests-Chronology' #'KernelTests-Classes' #'KernelTests-Me...etc...		categoriesSelected: 	a Set(#'Laser-Game-Tests')		classes: 	{BlankCellTestCase . CellRendererTestCase . GridDirectionTestCase . Gr...etc...		classIndex: 	0		classesSelected: 	a Set(CellRendererTestCase TargetCellTestCase GridTestCase Mir...etc...		failedList: 	{CellRendererTestCase>>#testCellOffsetCalculations}		failedSelected: 	CellRendererTestCase>>#testCellOffsetCalculations		errorList: 	#()		errorSelected: 	nil		lastUpdate: 	3616935920		result: 	20 run, 19 passes, 0 expected failures, 1 failures, 0 errors, 0 unexpec...etc...		previousRun: 	nil		categoryPattern: 	nil		classPattern: 	nil[] in [] in OrderedCollection(Collection)>>do:displayingProgress:every:	Receiver: an OrderedCollection(CellRendererTestCase>>#testCellOffsetCalculations)	Arguments and temporary variables: <<error during printing>	Receiver's instance variables: 		array: 	{CellRendererTestCase>>#testCellOffsetCalculations . nil . nil . nil . n...etc...		firstIndex: 	1		lastIndex: 	1OrderedCollection>>do:	Receiver: an OrderedCollection(CellRendererTestCase>>#testCellOffsetCalculations)	Arguments and temporary variables: 		aBlock: 	[closure] in [] in OrderedCollection(Collection)>>do:displayingProgress...etc...		index: 	1	Receiver's instance variables: 		array: 	{CellRendererTestCase>>#testCellOffsetCalculations . nil . nil . nil . n...etc...		firstIndex: 	1		lastIndex: 	1--- The full stack ---CellRendererTestCase(TestCase)>>signalFailure:CellRendererTestCase(TestCase)>>assert:CellRendererTestCase(TestCase)>>should:CellRendererTestCase>>testCellOffsetCalculationsCellRendererTestCase(TestCase)>>performTest[] in [] in CellRendererTestCase(TestCase)>>runCaseBlockClosure>>on:do:[] in CellRendererTestCase(TestCase)>>timeout:after:BlockClosure>>ensure:CellRendererTestCase(TestCase)>>timeout:after:[] in CellRendererTestCase(TestCase)>>runCaseBlockClosure>>ensure:CellRendererTestCase(TestCase)>>runCase[] in CellRendererTestCase(TestCase)>>debugBlockClosure>>ensure:CellRendererTestCase(TestCase)>>debug[] in TestRunner>>debugSuite:[] in [] in OrderedCollection(Collection)>>do:displayingProgress:every:OrderedCollection>>do: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[] in OrderedCollection(Collection)>>do:displayingProgress:every:[] in [] in MorphicUIManager>>displayProgress:at:from:to:during:BlockClosure>>on:do:[] in MorphicUIManager>>displayProgress:at:from:to:during:BlockClosure>>ensure:MorphicUIManager>>displayProgress:at:from:to:during:ProgressInitiationException>>defaultResumeValueProgressInitiationException(Exception)>>resumeProgressInitiationException>>defaultActionUndefinedObject>>handleSignal:MethodContext(ContextPart)>>handleSignal:ProgressInitiationException(Exception)>>signalProgressInitiationException>>display:at:from:to:during:ProgressInitiationException class>>display:at:from:to:during:ByteString(String)>>displayProgressAt:from:to:during:ByteString(String)>>displayProgressFrom:to:during:OrderedCollection(Collection)>>do:displayingProgress:every:[] in TestRunner>>basicRunSuite:do:BlockClosure>>ensure:TestRunner>>basicRunSuite:do:TestRunner>>debugSuite:TestRunner>>debug:TestRunner>>failedSelected:PluggableListMorphPlus(PluggableListMorph)>>changeModelSelection:PluggableListMorphPlus(PluggableListMorph)>>mouseUp:PluggableListMorphPlus(Morph)>>handleMouseUp:MouseButtonEvent>>sentTo:PluggableListMorphPlus(Morph)>>handleEvent:PluggableListMorphPlus(Morph)>>handleFocusEvent:[] in HandMorph>>sendFocusEvent:to:clear:BlockClosure>>on:do:PasteUpMorph>>becomeActiveDuring:HandMorph>>sendFocusEvent:to:clear:HandMorph>>sendEvent:focus:clear:HandMorph>>sendMouseEvent:HandMorph>>handleEvent:HandMorph>>processEvents[] in WorldState>>doOneCycleNowFor:Array(SequenceableCollection)>>do:WorldState>>handsDo:WorldState>>doOneCycleNowFor:WorldState>>doOneCycleFor:-- and more not shown --