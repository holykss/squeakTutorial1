'From Squeak4.6 of 8 July 2015 [latest update: #15102] on 8 July 2015 at 10:06:12 pm'!ReleaseBuilder prepareNewRelease!----SNAPSHOT----{8 July 2015 . 10:06:35 pm} Squeak4.5-15102.image priorSource: 0!----STARTUP----{8 July 2015 . 10:09:44 pm} as /home/cmm/Chris/dev/Squeak/Squeak4.5-15102.image!----SNAPSHOT----{8 July 2015 . 10:09:50 pm} Squeak4.6-15102.image priorSource: 122!----QUIT/NOSAVE----{8 July 2015 . 10:09:53 pm} Squeak4.6-15102.image priorSource: 303!----STARTUP----{9 July 2015 . 9:42:44 am} as /home/cmm/Chris/dev/Squeak/Squeak4.6-15102.image!----QUIT/NOSAVE----{9 July 2015 . 9:42:46 am} Squeak4.6-15102.image priorSource: 303!----STARTUP----{9 July 2015 . 9:42:51 am} as /home/cmm/Chris/dev/Squeak/Squeak4.6-15102.image!----QUIT/NOSAVE----{9 July 2015 . 9:43:09 am} Squeak4.6-15102.image priorSource: 303!----STARTUP----{9 July 2015 . 10:41:07 am} as /home/cmm/Chris/dev/Squeak/Squeak-4.6-All-In-One/Squeak-4.6-All-in-One.app/Contents/Resources/Squeak4.6-15102.image!----QUIT/NOSAVE----{9 July 2015 . 10:41:10 am} Squeak4.6-15102.image priorSource: 303!----STARTUP----{11 August 2015 . 5:17:53 pm} as C:\prj\monoRailSqueak\Squeak-4.6-All-in-One.app\Contents\Resources\Squeak4.6-15102.image!----SNAPSHOT----{11 August 2015 . 5:18:22 pm} Squeak4.6-15102.image priorSource: 303!----STARTUP----{11 August 2015 . 5:45:48 pm} as C:\prj\monoRailSqueak\Squeak-4.6-All-in-One.app\Contents\Resources\Squeak4.6-15102.image!----QUIT----{11 August 2015 . 5:52:13 pm} Squeak4.6-15102.image priorSource: 1237!----STARTUP----{11 August 2015 . 5:52:17 pm} as C:\prj\monoRailSqueak\Squeak-4.6-All-in-One.app\Contents\Resources\Squeak4.6-15102.image!SystemOrganization addCategory: #'Laser-Game-Model'!SystemOrganization addCategory: #'Laser-Game-Graphics'!SystemOrganization addCategory: #'Laser-Game-Tests'!Object subclass: #TargetCell	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!Object subclass: #MirrorCell	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!Object subclass: #BlankCell	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!Object subclass: #Grid	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!TestCase subclass: #BlankCellTestCase	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Tests'!BlankCellTestCase organization addCategory: #tests!!BlankCellTestCase methodsFor: 'tests' stamp: '| cell | 8/11/2015 18:02'!testCellOnState	| cell |	cell := BlankCell new.	self should: [cell isOff].	self shouldnt: [cell isOn].	! !Object subclass: #BlankCell	instanceVariableNames: 'activeSegments'	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!!BlankCell methodsFor: 'accessing' stamp: '| cell | 8/11/2015 18:03'!activeSegments	^ activeSegments! !!BlankCell methodsFor: 'accessing' stamp: '| cell | 8/11/2015 18:03'!activeSegments: anObject	activeSegments := anObject! !BlankCell organization addCategory: #'initialize-release'!!BlankCell methodsFor: 'initialize-release' stamp: '| cell | 8/11/2015 18:05'!initializeActiveSegments	self activeSegments: Dictionary new.		self activeSegments at: #north put: false.	self activeSegments at: #east put: false.	self activeSegments at: #south put: false.	self activeSegments at: #west put: false.	! !!BlankCell methodsFor: 'initialize-release' stamp: '| cell | 8/11/2015 18:06'!initialize		super initialize.	self initializeActiveSegments.! !BlankCell organization addCategory: #testing!!BlankCell methodsFor: 'testing' stamp: '| cell | 8/11/2015 18:07'!isOn	^ false	! !!BlankCell methodsFor: 'testing' stamp: '| cell | 8/11/2015 18:07'!isOff	^ false	! !----SNAPSHOT----{11 August 2015 . 6:07:27 pm} Squeak4.6-15102.image priorSource: 1464!----QUIT----{11 August 2015 . 6:07:41 pm} Squeak4.6-15102.image priorSource: 3898!----STARTUP----{12 August 2015 . 10:34:28 am} as C:\prj\monoRailSqueak\Squeak-4.6-All-in-One.app\Contents\Resources\Squeak4.6-15102.image!----QUIT----{12 August 2015 . 10:34:47 am} Squeak4.6-15102.image priorSource: 3986!----STARTUP----{12 August 2015 . 10:34:51 am} as C:\prj\monoRailSqueak\Squeak-4.6-All-in-One.app\Contents\Resources\Squeak4.6-15102.image!Object subclass: #BlankCell	instanceVariableNames: 'activeSegments exitSides'	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!!BlankCell methodsFor: 'accessing' stamp: '| cell | 8/12/2015 10:40'!exitSides	^ exitSides! !!BlankCell methodsFor: 'accessing' stamp: '| cell | 8/12/2015 10:40'!exitSides: anObject	exitSides := anObject! !!BlankCell methodsFor: 'initialize-release' stamp: '| cell | 8/12/2015 10:41'!initializeExitSides	self exitSides: Dictionary new.		self exitSides at: #north put: #south.		self activeSegments at: #north put: false.	self activeSegments at: #east put: false.	self activeSegments at: #south put: false.	self activeSegments at: #west put: false.	! !!BlankCell methodsFor: 'initialize-release' stamp: '| cell | 8/12/2015 10:41' prior: 33559320!initializeExitSides	self exitSides: Dictionary new.		self exitSides at: #north put: #south.! !!BlankCell methodsFor: 'initialize-release' stamp: '| cell | 8/12/2015 10:42' prior: 33558041!initialize		super initialize.	self initializeActiveSegments.	self initializeExitSides.! !!BlankCell methodsFor: 'initialize-release' stamp: '| cell | 8/12/2015 10:42' prior: 33559692!initializeExitSides	self exitSides: Dictionary new.		self exitSides at: #north put: #south.	self exitSides at: #east put: #west.	self exitSides at: #south put: #north.	self exitSides at: #west put: #east! !!BlankCell methodsFor: 'initialize-release' stamp: '| cell | 8/12/2015 10:42' prior: 33560077!initializeExitSides	self exitSides: Dictionary new.		self exitSides at: #north put: #south.	self exitSides at: #east put: #west.	self exitSides at: #south put: #north.	self exitSides at: #west put: #east.! !----SNAPSHOT----{12 August 2015 . 10:43:06 am} Squeak4.6-15102.image priorSource: 4211!!BlankCell methodsFor: 'accessing' stamp: '| cell | 8/12/2015 10:44'!exitSideFor: aSymbol	^self exitSides at: aSymbol.! !----SNAPSHOT----{12 August 2015 . 10:44:38 am} Squeak4.6-15102.image priorSource: 6170!----QUIT----{12 August 2015 . 10:44:41 am} Squeak4.6-15102.image priorSource: 6384!----STARTUP----{12 August 2015 . 10:44:49 am} as C:\prj\monoRailSqueak\Squeak-4.6-All-in-One.app\Contents\Resources\Squeak4.6-15102.image!!BlankCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 10:52'!testCellExitSides	| cell exit |	cell := BlankCell new.	exit:= cell exitSideFor: #north.	self should: [exit = #south].		exit:= cell exitSideFor: #south.	self should: [exit = #north].	exit:= cell exitSideFor: #east.	self should: [exit = #west].	exit:= cell exitSideFor: #west.	self should: [exit = #east].	! !!BlankCell methodsFor: 'testing' stamp: '| cell | 8/12/2015 10:57' prior: 33558311!isOff	^ self isOn not.	! !!BlankCell methodsFor: 'testing' stamp: '| cell | 8/12/2015 10:59' prior: 33558224!isOn	^ self activeSegments values anySatisfy: [:each | each = true].	! !!BlankCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 11:00'!testCellSegmentsState	| cell |	cell := BlankCell new.	self should: [cell isOff].	self shouldnt: [cell isOn].	! !!BlankCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 11:00' prior: 33561875!testCellSegmentsState	| cell |	cell := BlankCell new.		self shouldnt: [cell isSegmentOnFor: #north].	! !!BlankCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 11:01' prior: 33562083!testCellSegmentsState	| cell |	cell := BlankCell new.		self shouldnt: [cell isSegmentOnFor: #north].	self shouldnt: [cell isSegmentOnFor: #south].	self shouldnt: [cell isSegmentOnFor: #east].	self shouldnt: [cell isSegmentOnFor: #west].	! !!BlankCell methodsFor: 'testing' stamp: '| cell | 8/12/2015 11:01'!isSegmentOnFor: aSymbol	^ self activeSegments at: aSymbol.	! !!BlankCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 11:07'!testCellLaserActivity	| cell exit |	cell := BlankCell new.	exit:= cell exitSideFor: #north.	self should: [exit = #south].		exit:= cell exitSideFor: #south.	self should: [exit = #north].	exit:= cell exitSideFor: #east.	self should: [exit = #west].	exit:= cell exitSideFor: #west.	self should: [exit = #east].	! !!BlankCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 11:09' prior: 33562739!testCellLaserActivity	| cell |	cell := BlankCell new.	cell laserEntersFrom: #north.		self should: [cell isOn].	self should: [cell isSegmentOnFor: #north].	self should: [cell isSegmentOnFor: #south].	self shouldnt: [cell isSegmentOnFor: #west].	self shouldnt: [cell isSegmentOnFor: #east].! !!BlankCell methodsFor: 'testing' stamp: '| cell | 8/12/2015 11:11'!laserEntersFrom: aSymbol	| exit |	self activeSegments at: aSymbol put: true.	exit := self exitSideFor: aSymbol.	self activeSegments at: exit put: true.	! !----SNAPSHOT----{12 August 2015 . 11:13:03 am} Squeak4.6-15102.image priorSource: 6473!Object subclass: #MirrorCell	instanceVariableNames: 'leansLeft'	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!!MirrorCell methodsFor: 'accessing' stamp: '| cell | 8/12/2015 11:14'!leansLeft	^ leansLeft! !!MirrorCell methodsFor: 'accessing' stamp: '| cell | 8/12/2015 11:14'!leansLeft: anObject	leansLeft := anObject! !BlankCellTestCase organization addCategory: #'initialize-release'!!BlankCellTestCase methodsFor: 'initialize-release' stamp: '| cell | 8/12/2015 11:16'!initialize	super initialize.	self leansLeft:true.	! !BlankCellTestCase organization addCategory: #testing!BlankCellTestCase organization removeCategory: #testing!MirrorCell organization addCategory: #testing!!MirrorCell methodsFor: 'testing' stamp: '| cell | 8/12/2015 11:22'!isLeft	^ self leansLeft! !!MirrorCell methodsFor: 'testing' stamp: '| cell | 8/12/2015 11:22'!isRight	^ self isLeft not! !Object subclass: #Cell	instanceVariableNames: 'activeSegments exitSides'	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!!Cell methodsFor: 'accessing' stamp: '| cell | 8/12/2015 11:24'!activeSegments	^ activeSegments! !!Cell methodsFor: 'accessing' stamp: '| cell | 8/12/2015 11:24'!activeSegments: anObject	activeSegments := anObject! !!Cell methodsFor: 'accessing' stamp: '| cell | 8/12/2015 11:24'!exitSides	^ exitSides! !!Cell methodsFor: 'accessing' stamp: '| cell | 8/12/2015 11:24'!exitSides: anObject	exitSides := anObject! !Object subclass: #BlankCell	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!Cell subclass: #BlankCell	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!Cell subclass: #MirrorCell	instanceVariableNames: 'leansLeft'	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!BlankCell removeSelector: #activeSegments!BlankCell removeSelector: #activeSegments:!BlankCell removeSelector: #exitSides!BlankCell removeSelector: #exitSides:!BlankCell organization classify: #laserEntersFrom: under: #accessing!!BlankCell methodsFor: 'accessing' stamp: '| cell | 8/12/2015 11:11' prior: 33563527!laserEntersFrom: aSymbol	| exit |	self activeSegments at: aSymbol put: true.	exit := self exitSideFor: aSymbol.	self activeSegments at: exit put: true.	! !Cell organization addCategory: #'initialize-release'!!Cell methodsFor: 'initialize-release' stamp: '| cell | 8/12/2015 11:33'!initialize	super initialize.	! !!Cell methodsFor: 'initialize-release' stamp: '| cell | 8/12/2015 11:34'!initializeActiveSegments	self activeSegments: Dictionary new.		self activeSegments at: #north put: false.	self activeSegments at: #east put: false.	self activeSegments at: #south put: false.	self activeSegments at: #west put: false.	! !BlankCell removeSelector: #initializeActiveSegments!!BlankCell methodsFor: 'initialize-release' stamp: '| cell | 8/12/2015 11:37' prior: 33559887!initialize		super initialize.	self initializeExitSides.! !!Cell methodsFor: 'initialize-release' stamp: '| cell | 8/12/2015 11:37' prior: 33566307!initialize	super initialize.	self initializeActiveSegments.! !----SNAPSHOT----{12 August 2015 . 11:39:12 am} Squeak4.6-15102.image priorSource: 9255!BlankCellTestCase removeSelector: #initialize!MirrorCell organization addCategory: #'initialize-release'!!MirrorCell methodsFor: 'initialize-release' stamp: '| cell | 8/12/2015 11:42'!initialize	super initialize.	self leansLeft:true.	! !Cell subclass: #TargetCell	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!MirrorCell organization addCategory: #handle!!MirrorCell methodsFor: 'handle' stamp: '| cell | 8/12/2015 11:53'!leanLeft	self leansLeft: true.		self exitSides at: #north put: #east.	self exitSides at: #east put: #north.	self exitSides at: #south put: #west.	self exitSides at: #west put: #south.! !!MirrorCell methodsFor: 'handle' stamp: '| cell | 8/12/2015 11:53'!leanRight	self leansLeft: false.		self exitSides at: #north put: #west.	self exitSides at: #east put: #south.	self exitSides at: #south put: #east.	self exitSides at: #west put: #north.! !!MirrorCell methodsFor: 'initialize-release' stamp: '| cell | 8/12/2015 11:54' prior: 33567307!initialize	super initialize.	self initializeExitSides.	self leansLeft:true.	! !!MirrorCell methodsFor: 'initialize-release' stamp: '| cell | 8/12/2015 11:54'!initializeExitSides	self exitSides:Dictionary new.! !!MirrorCell methodsFor: 'initialize-release' stamp: '| cell | 8/12/2015 11:54' prior: 33568329!initializeExitSides	self exitSides: Dictionary new.! !!Cell methodsFor: 'accessing' stamp: '| cell | 8/12/2015 10:44'!exitSideFor: aSymbol	^self exitSides at: aSymbol.! !BlankCell removeSelector: #exitSideFor:!Cell organization addCategory: #testing!!Cell methodsFor: 'testing' stamp: '| cell | 8/12/2015 10:57'!isOff	^ self isOn not.	! !BlankCell removeSelector: #isOff!!Cell methodsFor: 'testing' stamp: '| cell | 8/12/2015 10:59'!isOn	^ self activeSegments values anySatisfy: [:each | each = true].	! !BlankCell removeSelector: #isOn!!Cell methodsFor: 'testing' stamp: '| cell | 8/12/2015 11:01'!isSegmentOnFor: aSymbol	^ self activeSegments at: aSymbol.	! !BlankCell removeSelector: #isSegmentOnFor:!!Cell methodsFor: 'testing' stamp: '| cell | 8/12/2015 11:11'!laserEntersFrom: aSymbol	| exit |	self activeSegments at: aSymbol put: true.	exit := self exitSideFor: aSymbol.	self activeSegments at: exit put: true.	! !BlankCell removeSelector: #laserEntersFrom:!BlankCell organization removeCategory: #testing!BlankCell organization removeCategory: #accessing!----SNAPSHOT----{12 August 2015 . 11:59:01 am} Squeak4.6-15102.image priorSource: 12596!----QUIT----{12 August 2015 . 11:59:33 am} Squeak4.6-15102.image priorSource: 15151!----STARTUP----{12 August 2015 . 12:00:13 pm} as C:\prj\monoRailSqueak\Squeak-4.6-All-in-One.app\Contents\Resources\Squeak4.6-15102.image!TestCase subclass: #MirrorCellTestCase	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Tests'!BlankCellTestCase organization removeCategory: #'initialize-release'!MirrorCellTestCase organization addCategory: #tests!!MirrorCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 12:02'!testCellOnState	| cell |		cell := MirrorCell new.		self should: [cell isOff].	self shouldnt: [cell isOn].! !!MirrorCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 12:03'!testCellSegmentsState	| cell |		cell := MirrorCell new.		self should: [cell isOff].	self shouldnt: [cell isOn].! !!MirrorCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 12:03' prior: 33570436!testCellSegmentsState	| cell |		cell := MirrorCell new.		self shouldnt: [cell isSegmentOnFor: #north].	self shouldnt: [cell isOn].! !!MirrorCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 12:03' prior: 33570649!testCellSegmentsState	| cell |		cell := MirrorCell new.		self shouldnt: [cell isSegmentOnFor: #north].	self shouldnt: [cell isSegmentOnFor: #east].	self shouldnt: [cell isSegmentOnFor: #south].	self shouldnt: [cell isSegmentOnFor: #west].! !!MirrorCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 13:36'!testCellExitSidesMirrorLeft	| cell |		cell := MirrorCell new.		self shouldnt: [cell isSegmentOnFor: #north].	self shouldnt: [cell isSegmentOnFor: #east].	self shouldnt: [cell isSegmentOnFor: #south].	self shouldnt: [cell isSegmentOnFor: #west].! !!MirrorCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 13:36' prior: 33571207!testCellExitSidesMirrorLeft	| cell exit |		cell := MirrorCell new.		self shouldnt: [cell isSegmentOnFor: #north].	self shouldnt: [cell isSegmentOnFor: #east].	self shouldnt: [cell isSegmentOnFor: #south].	self shouldnt: [cell isSegmentOnFor: #west].! !!MirrorCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 13:36' prior: 33571555!testCellExitSidesMirrorLeft	| cell |		cell := MirrorCell new.			self shouldnt: [cell isSegmentOnFor: #north].	self shouldnt: [cell isSegmentOnFor: #east].	self shouldnt: [cell isSegmentOnFor: #south].	self shouldnt: [cell isSegmentOnFor: #west].! !!MirrorCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 13:37' prior: 33571908!testCellExitSidesMirrorLeft	| cell exit |	cell := MirrorCell new.	cell leanLeft.	exit:= cell exitSideFor: #north.	self should: [exit = #south].		exit:= cell exitSideFor: #south.	self should: [exit = #north].	exit:= cell exitSideFor: #east.	self should: [exit = #west].	exit:= cell exitSideFor: #west.	self should: [exit = #east].	! !!MirrorCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 13:37' prior: 33572258!testCellExitSidesMirrorLeft	| cell exit |	cell := MirrorCell new.	cell leanLeft.	exit:= cell exitSideFor: #north.	self should: [exit = #east].		exit:= cell exitSideFor: #east.	self should: [exit = #north].	exit:= cell exitSideFor: #east.	self should: [exit = #west].	exit:= cell exitSideFor: #west.	self should: [exit = #east].	! !!MirrorCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 13:38' prior: 33572699!testCellExitSidesMirrorLeft	| cell exit |	cell := MirrorCell new.	cell leanLeft.	exit:= cell exitSideFor: #north.	self should: [exit = #east].		exit:= cell exitSideFor: #east.	self should: [exit = #north].	exit:= cell exitSideFor: #south.	self should: [exit = #west].	exit:= cell exitSideFor: #west.	self should: [exit = #south].	! !!MirrorCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 13:39'!testCellExitSidesMirrorRight	| cell exit |	cell := MirrorCell new.	cell leanRight.	exit:= cell exitSideFor: #north.	self should: [exit = #west].		exit:= cell exitSideFor: #west.	self should: [exit = #north].	exit:= cell exitSideFor: #south.	self should: [exit = #east].	exit:= cell exitSideFor: #east.	self should: [exit = #south].	! !!MirrorCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 13:41'!testCellLaserActivityMirrorLeft	| cell |	cell := MirrorCell new.	cell leanLeft.	cell laserEntersFrom: #north.		self should: [cell isOn].	self should: [cell isSegmentOnFor: #north].	self should: [cell isSegmentOnFor: #east].	self shouldnt: [cell isSegmentOnFor: #south].	self shouldnt: [cell isSegmentOnFor: #west].! !!MirrorCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 13:41'!testCellLaserActivityMirrorRight	| cell |	cell := MirrorCell new.	cell leanRight.	cell laserEntersFrom: #north.		self should: [cell isOn].	self should: [cell isSegmentOnFor: #north].	self should: [cell isSegmentOnFor: #west].	self shouldnt: [cell isSegmentOnFor: #south].	self shouldnt: [cell isSegmentOnFor: #east].! !----QUIT----{12 August 2015 . 1:42:08 pm} Squeak4.6-15102.image priorSource: 15241!----STARTUP----{12 August 2015 . 1:42:21 pm} as C:\prj\monoRailSqueak\Squeak-4.6-All-in-One.app\Contents\Resources\Squeak4.6-15102.image!MirrorCell organization addCategory: #'instance creation'!MirrorCell organization classify: #leanLeft under: #'instance creation'!!MirrorCell methodsFor: 'instance creation' stamp: '| cell | 8/12/2015 11:53' prior: 33567611!leanLeft	self leansLeft: true.		self exitSides at: #north put: #east.	self exitSides at: #east put: #north.	self exitSides at: #south put: #west.	self exitSides at: #west put: #south.! !MirrorCell organization classify: #leanRight under: #'instance creation'!!MirrorCell methodsFor: 'instance creation' stamp: '| cell | 8/12/2015 11:53' prior: 33567873!leanRight	self leansLeft: false.		self exitSides at: #north put: #west.	self exitSides at: #east put: #south.	self exitSides at: #south put: #east.	self exitSides at: #west put: #north.! !MirrorCell organization classify: #leanLeft under: #accessing!!MirrorCell methodsFor: 'accessing' stamp: '| cell | 8/12/2015 11:53' prior: 33575179!leanLeft	self leansLeft: true.		self exitSides at: #north put: #east.	self exitSides at: #east put: #north.	self exitSides at: #south put: #west.	self exitSides at: #west put: #south.! !MirrorCell organization classify: #leanRight under: #accessing!!MirrorCell methodsFor: 'accessing' stamp: '| cell | 8/12/2015 11:53' prior: 33575543!leanRight	self leansLeft: false.		self exitSides at: #north put: #west.	self exitSides at: #east put: #south.	self exitSides at: #south put: #east.	self exitSides at: #west put: #north.! !MirrorCell organization classify: #leanLeft under: #handle!!MirrorCell methodsFor: 'handle' stamp: '| cell | 8/12/2015 11:53' prior: 33575890!leanLeft	self leansLeft: true.		self exitSides at: #north put: #east.	self exitSides at: #east put: #north.	self exitSides at: #south put: #west.	self exitSides at: #west put: #south.! !MirrorCell organization classify: #leanRight under: #handle!!MirrorCell methodsFor: 'handle' stamp: '| cell | 8/12/2015 11:53' prior: 33576236!leanRight	self leansLeft: false.		self exitSides at: #north put: #west.	self exitSides at: #east put: #south.	self exitSides at: #south put: #east.	self exitSides at: #west put: #north.! !MirrorCell organization removeCategory: #'instance creation'!MirrorCell class organization addCategory: #'instance creation'!!MirrorCell class methodsFor: 'instance creation' stamp: '| cell | 8/12/2015 13:48'!leanLeft	^ super new leanLeft! !!MirrorCell class methodsFor: 'instance creation' stamp: '| cell | 8/12/2015 13:48' prior: 33577327!leanLeft	^ super new leanRight! !!MirrorCell class methodsFor: 'instance creation' stamp: '| cell | 8/12/2015 13:49' prior: 33577462!leanLeft	^ super new leanLeft! !!MirrorCell class methodsFor: 'instance creation' stamp: '| cell | 8/12/2015 13:49'!leanRight	^ super new leanRight! !!MirrorCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 13:51' prior: 33573990!testCellLaserActivityMirrorLeft	| cell |	cell := MirrorCell leanLeft.	cell laserEntersFrom: #north.		self should: [cell isOn].	self should: [cell isSegmentOnFor: #north].	self should: [cell isSegmentOnFor: #east].	self shouldnt: [cell isSegmentOnFor: #south].	self shouldnt: [cell isSegmentOnFor: #west].! !!MirrorCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 13:51' prior: 33574394!testCellLaserActivityMirrorRight	| cell |	cell := MirrorCell leanRight.	cell laserEntersFrom: #north.		self should: [cell isOn].	self should: [cell isSegmentOnFor: #north].	self should: [cell isSegmentOnFor: #west].	self shouldnt: [cell isSegmentOnFor: #south].	self shouldnt: [cell isSegmentOnFor: #east].! !!MirrorCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 13:51' prior: 33578253!testCellLaserActivityMirrorRight	| cell |	cell := MirrorCell leanRight.	cell laserEntersFrom: #north.		self should: [cell isOn].	self should: [cell isSegmentOnFor: #north].	self should: [cell isSegmentOnFor: #west].	self shouldnt: [cell isSegmentOnFor: #south].	self shouldnt: [cell isSegmentOnFor: #east].! !----QUIT----{12 August 2015 . 1:52:23 pm} Squeak4.6-15102.image priorSource: 20292!----STARTUP----{12 August 2015 . 1:52:36 pm} as C:\prj\monoRailSqueak\Squeak-4.6-All-in-One.app\Contents\Resources\Squeak4.6-15102.image!TargetCell organization addCategory: #'initialize-release'!!TargetCell methodsFor: 'initialize-release' stamp: '| cell | 8/12/2015 13:54'!initializeExitSides	! !!TargetCell methodsFor: 'initialize-release' stamp: '| cell | 8/12/2015 13:56' prior: 33579349!initializeExitSides	self exitSides: Dictionary new.		self exitSides at: #north put: nil.	self exitSides at: #east put: nil.	self exitSides at: #south put: nil.	self exitSides at: #west put: nil.! !!TargetCell methodsFor: 'initialize-release' stamp: '| cell | 8/12/2015 13:56'!initialize	super initialize.	self initializeExitSides.! !----SNAPSHOT----{12 August 2015 . 1:57:48 pm} Squeak4.6-15102.image priorSource: 24550!----QUIT----{12 August 2015 . 1:59:05 pm} Squeak4.6-15102.image priorSource: 25382!----STARTUP----{12 August 2015 . 1:59:57 pm} as C:\prj\monoRailSqueak\Squeak-4.6-All-in-One.app\Contents\Resources\Squeak4.6-15102.image!TestCase subclass: #TargetCellTestCase	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Tests'!TargetCellTestCase organization addCategory: #tests!!TargetCellTestCase methodsFor: 'no messages' stamp: '| cell | 8/12/2015 14:01'!testCellOnState	| cell |		cell := TargetCell new.	self should: [cell isOff].	self shouldnt: [cell isOn].! !!TargetCellTestCase methodsFor: 'as yet unclassified' stamp: '| cell | 8/12/2015 14:02'!testCellSegmentsState	| cell |		cell := TargetCell new.		self should: [cell isOff].	self shouldnt: [cell isOn].! !!TargetCellTestCase methodsFor: 'as yet unclassified' stamp: '| cell | 8/12/2015 14:02' prior: 33580611!testCellSegmentsState	| cell |		cell := TargetCell new.		self shouldnt: [cell isSegmentOnFor: #north].	self shouldnt: [cell isSegmentOnFor: #east].	self shouldnt: [cell isSegmentOnFor: #south].	self shouldnt: [cell isSegmentOnFor: #west].! !TargetCellTestCase organization classify: #testCellOnState under: #tests!!TargetCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 14:01' prior: 33580408!testCellOnState	| cell |		cell := TargetCell new.	self should: [cell isOff].	self shouldnt: [cell isOn].! !TargetCellTestCase organization classify: #testCellSegmentsState under: #tests!!TargetCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 14:02' prior: 33580838!testCellSegmentsState	| cell |		cell := TargetCell new.		self shouldnt: [cell isSegmentOnFor: #north].	self shouldnt: [cell isSegmentOnFor: #east].	self shouldnt: [cell isSegmentOnFor: #south].	self shouldnt: [cell isSegmentOnFor: #west].! !!TargetCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 14:09'!testCellExitSides	| cell inputSides |	cell := TargetCell new.		inputSides := #(#north #east #south #west).		inputSides do: [:inputSide |		| exit |		exit := cell exitSideFor:inputSide.		self should: [exit isNil]]! !!TargetCellTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 14:10'!testCellLaserActivity	| cell |	cell := TargetCell new.	cell laserEntersFrom: #north.		self should: [cell isOn].	self should: [cell isSegmentOnFor: #north].	self shouldnt: [cell isSegmentOnFor: #south].	self shouldnt: [cell isSegmentOnFor: #west].	self shouldnt: [cell isSegmentOnFor: #east].! !----SNAPSHOT----{12 August 2015 . 2:11:04 pm} Squeak4.6-15102.image priorSource: 25471!----STARTUP----{12 August 2015 . 2:12:50 pm} as C:\prj\monoRailSqueak\Squeak-4.6-All-in-One.app\Contents\Resources\Squeak4.6-15102.image!Grid organization addCategory: #accessing!Object subclass: #Grid	instanceVariableNames: 'cells laserIsActive'	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!Object subclass: #Grid	instanceVariableNames: 'cells laserIsActive numberOfColumns numberOfRows'	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!Grid organization removeCategory: #accessing!!Grid methodsFor: 'accessing' stamp: '| cell | 8/12/2015 14:17'!cells	^ cells! !!Grid methodsFor: 'accessing' stamp: '| cell | 8/12/2015 14:17'!cells: anObject	cells := anObject! !!Grid methodsFor: 'accessing' stamp: '| cell | 8/12/2015 14:17'!laserIsActive	^ laserIsActive! !!Grid methodsFor: 'accessing' stamp: '| cell | 8/12/2015 14:17'!laserIsActive: anObject	laserIsActive := anObject! !!Grid methodsFor: 'accessing' stamp: '| cell | 8/12/2015 14:17'!numberOfColumns	^ numberOfColumns! !!Grid methodsFor: 'accessing' stamp: '| cell | 8/12/2015 14:17'!numberOfColumns: anObject	numberOfColumns := anObject! !!Grid methodsFor: 'accessing' stamp: '| cell | 8/12/2015 14:17'!numberOfRows	^ numberOfRows! !!Grid methodsFor: 'accessing' stamp: '| cell | 8/12/2015 14:17'!numberOfRows: anObject	numberOfRows := anObject! !----SNAPSHOT----{12 August 2015 . 2:17:15 pm} Squeak4.6-15102.image priorSource: 28043!Grid organization addCategory: #'initialize-release'!!Grid methodsFor: 'initialize-release' stamp: '| cell | 8/12/2015 14:18'!initialize	super initialize.	self laserIsActive: false.	self initializeCells.! !!Grid methodsFor: 'initialize-release' stamp: '| cell | 8/12/2015 14:19'!initializeCells	self cells: Dictionary new.	1 to: self numberOfColumns do: [:x |		1 to: numberOfRows do: [:y |			| pt cell |			pt := x@y.			cell := BlankCell new.			self cells at: pt put: cell]]! !!Grid methodsFor: 'accessing' stamp: '| cell | 8/12/2015 14:29' prior: 33583592!numberOfColumns	numberOfColumns isNil ifTrue: [self numberOfColumns: 1].		^ numberOfColumns! !!Grid methodsFor: 'accessing' stamp: '| cell | 8/12/2015 14:29' prior: 33583820!numberOfRows		numberOfRows isNil ifTrue: [self numberOfRows:1].	^ numberOfRows! !!Grid methodsFor: 'accessing' stamp: '| cell | 8/12/2015 14:29' prior: 33584812!numberOfRows		numberOfRows isNil ifTrue: [self numberOfRows:1].		^ numberOfRows! !!Grid methodsFor: 'accessing' stamp: '| cell | 8/12/2015 14:30'!at: aPoint	^ self cells at: aPoint.! !!Grid methodsFor: 'accessing' stamp: '| cell | 8/12/2015 14:31'!at: aPoint put: aCell	^ self cells at: aPoint put: aCell.! !----SNAPSHOT----{12 August 2015 . 2:31:36 pm} Squeak4.6-15102.image priorSource: 29538!TestCase subclass: #GridTestCase	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Tests'!GridTestCase organization addCategory: #tests!!GridTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 14:37'!testInitialConditions	|grid cell|		grid := Grid new.	self shouldnt: [grid laserIsActive].	cell := grid at: 1@1.	self should: [cell class = BlankCell].! !!Grid methodsFor: 'initialize-release' stamp: '| cell | 8/12/2015 14:40' prior: 33584347!initializeCells	self cells: Dictionary new.	1 to: self numberOfColumns do: [:x |		1 to: self numberOfRows do: [:y |			| pt cell |			pt := x@y.			cell := BlankCell new.			self cells at: pt put: cell]]! !----SNAPSHOT----{12 August 2015 . 2:40:58 pm} Squeak4.6-15102.image priorSource: 30864!!GridTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 14:51'!testNonDefaultGridSizeInitialConditions	|grid cell|		grid := Grid new.	grid numberOfRows: 4.	grid numberOfColumns: 4.	self shouldnt: [grid laserIsActive].	cell := grid at: 1@1.	self should: [cell class = BlankCell].	cell := grid at: 2@3.	self should: [cell class = BlankCell].	self should:[ cell isOff].! !Grid class organization addCategory: #'instance creation'!!Grid class methodsFor: 'instance creation' stamp: '| cell | 8/12/2015 14:56'!newOfSize: aPoint	| model |	model := self basicNew.	model		numberOfRows: aPoint y;		numberOfColumns: aPoint x.	model initialize.		^ model.	! !!GridTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 15:00' prior: 33586260!testNonDefaultGridSizeInitialConditions	|grid cell|		grid := Grid newOfSize:4@4.	self shouldnt: [grid laserIsActive].	cell := grid at: 1@1.	self should: [cell class = BlankCell].	cell := grid at: 2@3.	self should: [cell class = BlankCell].	self should:[ cell isOff].! !----SNAPSHOT----{12 August 2015 . 3:01:22 pm} Squeak4.6-15102.image priorSource: 31669!GridTestCase organization addCategory: #private!!GridTestCase methodsFor: 'private' stamp: '| cell | 8/12/2015 15:08'!generateDemoGrid	|grid|		grid := Grid newOfSize: 5@5.	grid at: 4@1 put: MirrorCell leanRight.	grid at: 5@1 put: TargetCell new.	grid at: 1@2 put: MirrorCell leanRight.	grid at: 5@2 put: MirrorCell leanLeft.	grid at: 5@2 put: MirrorCell leanLeft.	grid at: 5@2 put: MirrorCell leanLeft.	grid at: 5@2 put: MirrorCell leanLeft.	grid at: 5@2 put: MirrorCell leanLeft.	grid at: 5@2 put: MirrorCell leanLeft.	grid at: 5@2 put: MirrorCell leanLeft.	grid at: 5@2 put: MirrorCell leanLeft.	grid at: 5@2 put: MirrorCell leanLeft.	grid at: 5@2 put: MirrorCell leanLeft.	grid at: 5@2 put: MirrorCell leanLeft.	grid at: 5@2 put: MirrorCell leanLeft.	grid at: 5@2 put: MirrorCell leanLeft.! !!GridTestCase methodsFor: 'private' stamp: '| cell | 8/12/2015 15:08' prior: 33587448!generateDemoGrid	|grid|		grid := Grid newOfSize: 5@5.	grid at: 4@1 put: MirrorCell leanRight.	grid at: 5@1 put: TargetCell new.	grid at: 1@2 put: MirrorCell leanRight.	grid at: 5@2 put: MirrorCell leanLeft.	grid at: 2@3 put: MirrorCell leanLeft.	grid at: 3@3 put: MirrorCell leanLeft.	grid at: 5@3 put: MirrorCell leanLeft.	grid at: 2@4 put: MirrorCell leanLeft.	grid at: 3@4 put: MirrorCell leanLeft.	grid at: 1@5 put: MirrorCell leanLeft.	grid at: 4@5 put: MirrorCell leanLeft.! !!GridTestCase methodsFor: 'private' stamp: '| cell | 8/12/2015 15:09' prior: 33588235!generateDemoGrid	|grid|		grid := Grid newOfSize: 5@5.	grid at: 4@1 put: MirrorCell leanRight.	grid at: 5@1 put: TargetCell new.	grid at: 1@2 put: MirrorCell leanRight.	grid at: 5@2 put: MirrorCell leanLeft.	grid at: 2@3 put: MirrorCell leanLeft.	grid at: 3@3 put: MirrorCell leanRight.	grid at: 5@3 put: MirrorCell leanLeft.	grid at: 2@4 put: MirrorCell leanLeft.	grid at: 3@4 put: MirrorCell leanLeft.	grid at: 1@5 put: MirrorCell leanRight.	grid at: 4@5 put: MirrorCell leanRight.! !!GridTestCase methodsFor: 'private' stamp: '| cell | 8/12/2015 15:09' prior: 33588821!generateDemoGrid	|grid|		grid := Grid newOfSize: 5@5.	grid at: 4@1 put: MirrorCell leanRight.	grid at: 5@1 put: TargetCell new.	grid at: 1@2 put: MirrorCell leanRight.	grid at: 5@2 put: MirrorCell leanLeft.	grid at: 2@3 put: MirrorCell leanLeft.	grid at: 3@3 put: MirrorCell leanRight.	grid at: 5@3 put: MirrorCell leanLeft.	grid at: 2@4 put: MirrorCell leanLeft.	grid at: 3@4 put: MirrorCell leanLeft.	grid at: 1@5 put: MirrorCell leanRight.	grid at: 4@5 put: MirrorCell leanRight.	^ grid.! !!GridTestCase methodsFor: 'private' stamp: '| cell | 8/12/2015 15:10' prior: 33589410!generateDemoGrid	|grid|	grid := Grid newOfSize: 5@5.	grid at: 4@1 put: MirrorCell leanRight.	grid at: 5@1 put: TargetCell new.	grid at: 1@2 put: MirrorCell leanRight.	grid at: 5@2 put: MirrorCell leanLeft.	grid at: 2@3 put: MirrorCell leanLeft.	grid at: 3@3 put: MirrorCell leanRight.	grid at: 5@3 put: MirrorCell leanLeft.	grid at: 2@4 put: MirrorCell leanLeft.	grid at: 3@4 put: MirrorCell leanLeft.	grid at: 1@5 put: MirrorCell leanRight.	grid at: 4@5 put: MirrorCell leanRight.	^ grid.! !!GridTestCase methodsFor: 'private' stamp: '| cell | 8/12/2015 15:10' prior: 33590008!generateDemoGrid	|grid|	grid := Grid newOfSize: 5@5.	grid at: 4@1 put: MirrorCell leanRight.	grid at: 5@1 put: TargetCell new.	grid at: 1@2 put: MirrorCell leanRight.	grid at: 5@2 put: MirrorCell leanLeft.	grid at: 2@3 put: MirrorCell leanLeft.	grid at: 3@3 put: MirrorCell leanRight.	grid at: 5@3 put: MirrorCell leanLeft.	grid at: 2@4 put: MirrorCell leanLeft.	grid at: 3@4 put: MirrorCell leanLeft.	grid at: 1@5 put: MirrorCell leanRight.	grid at: 4@5 put: MirrorCell leanRight.	^ grid.! !!GridTestCase methodsFor: 'private' stamp: '| cell | 8/12/2015 15:10' prior: 33590603!generateDemoGrid	| grid |	grid := Grid newOfSize: 5@5.	grid at: 4@1 put: MirrorCell leanRight.	grid at: 5@1 put: TargetCell new.	grid at: 1@2 put: MirrorCell leanRight.	grid at: 5@2 put: MirrorCell leanLeft.	grid at: 2@3 put: MirrorCell leanLeft.	grid at: 3@3 put: MirrorCell leanRight.	grid at: 5@3 put: MirrorCell leanLeft.	grid at: 2@4 put: MirrorCell leanLeft.	grid at: 3@4 put: MirrorCell leanLeft.	grid at: 1@5 put: MirrorCell leanRight.	grid at: 4@5 put: MirrorCell leanRight.	^ grid.! !----SNAPSHOT----{12 August 2015 . 3:13:06 pm} Squeak4.6-15102.image priorSource: 32805!----QUIT----{12 August 2015 . 3:37:08 pm} Squeak4.6-15102.image priorSource: 37277!----STARTUP----{12 August 2015 . 3:42:27 pm} as C:\prj\monoRailSqueak\Squeak-4.6-All-in-One.app\Contents\Resources\Squeak4.6-15102.image!!Grid methodsFor: 'accessing' stamp: '| cell | 8/12/2015 15:48' prior: 33585130!at: aPoint	self revisit: 'sbw 08/12/2015 - We should add a more meaningful accessing technique here. x@y is confusing.'.	^ self cells at: aPoint.! !!Grid methodsFor: 'accessing' stamp: '| cell | 8/12/2015 15:48' prior: 33585235!at: aPoint put: aCell	self revisit: 'sbw 08/12/2015 - We should add a more meaningful accessing technique here. x@y is confusing.'.	^ self cells at: aPoint put: aCell.! !!Grid methodsFor: 'accessing' stamp: '| cell | 8/12/2015 15:48' prior: 33592337!at: aPoint put: aCell	self revisit: 'sbw 08/12/2015 - We should add a more meaningful accessing technique here. x@y is confusing.'.		^ self cells at: aPoint put: aCell.! !Object organization addCategory: #'*Laser-Game-Model'!!Object methodsFor: '*Laser-Game-Model' stamp: '| cell | 8/12/2015 15:50'!revisit: aString	"Does nothing"! !----SNAPSHOT----{12 August 2015 . 4:04:31 pm} Squeak4.6-15102.image priorSource: 37366!!GridTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 16:08'!testCellInteractions	|grid cell|		grid := self generateDemoGrid.	cell := grid at: 5@1.	self should: [cell is isOff]! !!GridTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 16:09' prior: 33593091!testCellInteractions	|grid cell|		grid := self generateDemoGrid.	cell := grid at: 5@1.	self should: [cell isOff]! !----SNAPSHOT----{12 August 2015 . 4:09:15 pm} Squeak4.6-15102.image priorSource: 38500!Object subclass: #LaserPathElement	instanceVariableNames: 'cell entrySide'	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!!LaserPathElement methodsFor: 'accessing' stamp: '| cell | 8/12/2015 16:18'!cell	^ cell! !!LaserPathElement methodsFor: 'accessing' stamp: '| cell | 8/12/2015 16:18'!cell: anObject	cell := anObject! !!LaserPathElement methodsFor: 'accessing' stamp: '| cell | 8/12/2015 16:18'!entrySide	^ entrySide! !!LaserPathElement methodsFor: 'accessing' stamp: '| cell | 8/12/2015 16:18'!entrySide: anObject	entrySide := anObject! !Object subclass: #Grid	instanceVariableNames: 'cells laserIsActive numberOfColumns numberOfRows laserBeamPath'	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!!Grid methodsFor: 'accessing' stamp: '| cell | 8/12/2015 16:20'!laserBeamPath	^ laserBeamPath! !!Grid methodsFor: 'accessing' stamp: '| cell | 8/12/2015 16:20'!laserBeamPath: anObject	laserBeamPath := anObject! !!Grid methodsFor: 'accessing' stamp: '| cell | 8/12/2015 16:21'!startingCell	| pt |	pt := 1@(self numberOfRows).	^ self at: pt.! !----SNAPSHOT----{12 August 2015 . 4:21:30 pm} Squeak4.6-15102.image priorSource: 38992!Object subclass: #Cell	instanceVariableNames: 'activeSegments exitSides gridLocation'	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!!Cell methodsFor: 'accessing' stamp: '| cell | 8/12/2015 16:24'!gridLocation	^ gridLocation! !!Cell methodsFor: 'accessing' stamp: '| cell | 8/12/2015 16:24'!gridLocation: anObject	gridLocation := anObject! !!Grid methodsFor: 'accessing' stamp: '| cell | 8/12/2015 16:25' prior: 33592591!at: aPoint put: aCell	self revisit: 'sbw 08/12/2015 - We should add a more meaningful accessing technique here. x@y is confusing.'.		aCell gridLocation: aPoint.	self cells at: aPoint put: aCell.! !----SNAPSHOT----{12 August 2015 . 4:25:37 pm} Squeak4.6-15102.image priorSource: 40216!Object subclass: #GridDirection	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!GridDirection subclass: #GridDirectionEast	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!GridDirection subclass: #GridDirectionNorth	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!GridDirection subclass: #GridDirectionSouth	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!GridDirection subclass: #GridDirectionWest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!----SNAPSHOT----{12 August 2015 . 4:44:12 pm} Squeak4.6-15102.image priorSource: 40969!!GridDirectionNorth class methodsFor: 'no messages' stamp: '| cell | 8/12/2015 16:48'!directionSymbol	^ #north! !!GridDirectionNorth class methodsFor: 'as yet unclassified' stamp: '| cell | 8/12/2015 16:48'!vector	^ 0@ -1! !!GridDirectionEast class methodsFor: 'no messages' stamp: '| cell | 8/12/2015 16:49'!directionSymbol	^ #east! !!GridDirectionEast class methodsFor: 'as yet unclassified' stamp: '| cell | 8/12/2015 16:50'!vector	^ 1@0! !!GridDirectionSouth class methodsFor: 'no messages' stamp: '| cell | 8/12/2015 16:50'!directionSymbol	^ #south! !!GridDirectionSouth class methodsFor: 'as yet unclassified' stamp: '| cell | 8/12/2015 16:50'!vector	^ 0@1! !!GridDirectionWest class methodsFor: 'no messages' stamp: '| cell | 8/12/2015 16:50'!directionSymbol	^ #west! !!GridDirectionWest class methodsFor: 'as yet unclassified' stamp: '| cell | 8/12/2015 16:50'!vector	^ -1@0! !!GridDirection class methodsFor: 'no messages' stamp: '| cell | 8/12/2015 16:52'!directionFor: aSymbol	^ self subclasses detect: [:cls | cls directionSymbol = aSymbol]! !----SNAPSHOT----{12 August 2015 . 4:52:27 pm} Squeak4.6-15102.image priorSource: 41789!TestCase subclass: #GridDirectionTestCase	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Tests'!GridDirectionTestCase organization addCategory: #tests!!GridDirectionTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 16:54'!testDirectionSelection	|direction|		direction := GridDirection directionFor: #north.	self should: [direction = GridDirectionNorth].	self should: [direction vector = 0@ -1].! !!GridDirectionTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 16:56' prior: 33597769!testDirectionSelection	|direction|		direction := GridDirection directionFor: #north.	self should: [direction = GridDirectionNorth].	self should: [direction vector = 0@ -1].	direction := GridDirection directionFor: #south.	self should: [direction = GridDirectionSouth].	self should: [direction vector = 0@ 1].	direction := GridDirection directionFor: #east.	self should: [direction = GridDirectionEast].	self should: [direction vector = 1@0].	direction := GridDirection directionFor: #west.	self should: [direction = GridDirectionWest].	self should: [direction vector = -1@0].! !direction vector!!GridDirectionTestCase methodsFor: 'tests' stamp: '| cell | 8/12/2015 17:03' prior: 33598044!testDirectionSelection	|direction|		direction := GridDirection directionFor: #north.	self should: [direction = GridDirectionNorth].	self should: [direction vector =(0@ -1)].	direction := GridDirection directionFor: #south.	self should: [direction = GridDirectionSouth].	self should: [direction vector = (0@ 1)].	direction := GridDirection directionFor: #east.	self should: [direction = GridDirectionEast].	self should: [direction vector = (1@0)].	direction := GridDirection directionFor: #west.	self should: [direction = GridDirectionWest].	self should: [direction vector = (-1@0)].! !----SNAPSHOT----{12 August 2015 . 5:04:06 pm} Squeak4.6-15102.image priorSource: 42965!